name: Java CI with Gradle and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    # gradlew 파일에 실행 권한 추가
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # Gradle 빌드 실행
    - name: Build with Gradle
      run: ./gradlew clean bootJar

    # Docker 이미지 빌드
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/emotiontalk .

    # Docker Hub 로그인
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # Docker Hub에 이미지 푸시
    - name: Docker Hub Push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/emotiontalk

  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      - name: Docker Pull
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/emotiontalk

      - name: Docker Stop Existing Container
        run: sudo docker stop my-app-container || true

      - name: Docker Remove Existing Container
        run: sudo docker rm my-app-container || true

      # 새로운 Docker 컨테이너 실행
      - name: Docker Run New Container
        run: sudo docker run --name my-app-container --rm -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/emotiontalk

      # Docker 이미지 정리 (필요한 경우)
      - name: Delete Old Docker Images
        run: sudo docker system prune -f
